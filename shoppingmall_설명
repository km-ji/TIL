# TIL
 Today I Learned

@eclipse/java/1주차/myshoppingmall해석

package myShoppingMall;


#1
public class MyShopLauncher{
	public static void main(String[] args) { //메인메소드 생성
		IShop shop=new MyShop();  //MyShop파일 부르기
		shop.setTitle("김성진 쇼핑몰");  //
		shop.genUser();
		shop.genProduct();
		shop.start();
	}
}


#2
//결제 유형을 지정하는 열거형 타입
public enum PayType {
	CARD, CASH
}


#3
//interface는 100% 추상메서드임
//그래도 연습용으로 적은 abstract
public interface IShop {
	abstract void setTitle(String title); //쇼핑몰 제목(이름) 생성
	abstract void genUser(); //유저생성
	abstract void genProduct(); //상품생성
	abstract void start(); //스타트기능생성(프로그램 실행하는 메인 시작 메서드)
}
	

#4
import java.util.ArrayList;
import java.util.Scanner;

public class MyShop implements IShop {
	String title;
	int selUser;
	Scanner scan=new Scanner(System.in);
	ArrayList<User> users=new ArrayList<>(); //리스트 만들어줌 //<>는 <User>타입이랑 같으니까 생략 가능(이하동일)
	ArrayList<Product> products=new ArrayList<>();
	ArrayList<Product> cart=new ArrayList<>();
	
	@Override
	public void setTitle(String title) {
		this.title=title;
	}
	
	@Override
	public void genUser() { //사용자 만드는 과정
		User kim=new User("김희경",PayType.CARD);
		User lee=new User("이지선",PayType.CASH);
		User cho=new User("조영은",PayType.CARD);
		users.add(kim); //ArrayList에 추가
		users.add(lee);
		users.add(cho);
	}
	
	@Override
	public void genProduct() {
		CellPhone cp01=new CellPhone("갤럭시노트20", 1200000,"SKT");
		CellPhone cp02=new CellPhone("애플 아이폰 XS",1300000,"KT");
		SmartTV st01=new SmartTV("QLED8K",6330000,"삼성");
		SmartTV st02=new SmartTV("QLED4K",3160000,"LG");
		products.add(cp01);
		products.add(cp02);
		products.add(st01);
		products.add(st02);
	}
	@Override
	public void start() {
		System.out.println(title+"에 오신 것을 환영합니다.");
		System.out.println("==구매자 정보화면==");
		int i=0;
		for (User u:users) {
			System.out.printf("[%d]: %s(%s)\n",i++,u.getName(),u.getPayType());
		}
		System.out.println("[x]종료");
		System.out.print("선택 : ");
		String sel=scan.next();
		
		switch (sel) {
		case "x":
			System.out.println("종료합니다.");
			System.exit(0);
			break;
		default:
			selUser=Integer.parseInt(sel); //sel은 문자열이 들어오기때문에 Integer.parseInt 사용해서 정수형으로 변환
			productList(); //productList 보여줌
		}
	}
	
	private void productList() {
		System.out.println("==상품목록==");
		int i=0;
		for (Product p:products) {
			System.out.printf("[%d]", i++);
			p.printDetail();
			System.out.println();
		}
		System.out.println("[h]구매자 정보화면, [c]결제화면");
		System.out.print("선택 : ");
		String sel=scan.next(); //String으로 읽힘
		
		switch (sel) {
		case "h" : 
			start();
			break;
		case "c" :
			checkOut();
			break;
		default:
			int psel=Integer.parseInt(sel);
			cart.add(products.get(psel)); //cart 장바구니에 add함
			productList();
		}
	}
	private void checkOut() {
		System.out.println("==결제화면==");
		int total=0;
		int i=0;
		for (Product p:cart) {
			if (p instanceof SmartTV) {
				SmartTV s=(SmartTV) p;
				System.out.printf("[%d]%s(%s)", i++, p.pname,s.maker);
			} else if (p instanceof CellPhone) {
				CellPhone c=(CellPhone) p;
				System.out.printf("[%d]%s(%s)", i++, p.pname, c.carrier);
			}
			total=total+p.price;
			System.out.println();
		}
		System.out.println("결제방법"+users.get(selUser).getPayType());
		System.out.println("합계" +total+"원 입니다.");
		System.out.println("[p]이전, [q]결제완료");
		System.out.print("선택 : ");
		String sel=scan.next();
		switch (sel) {
		case "q":
			System.out.println("결제가 완료되었습니다. 종료합니다.");
			System.exit(0);
			break;
		case "p":
			productList();
			break;
		default:
			checkOut();
		}
	}	
}


#5
public class User {
	private String name; //private로 해줬기 때문에 뒤에 get, set 있음
	private PayType payType; //동일
	
	public User(String name, PayType payType) {
		super();
		this.name=name; //인스턴스변수랑 같게
		this.payType=payType;
	}
	public String getName() {
		return name; //this.name return해줌
	}
	public void setName(String name) {
		this.name=name; //set은 return값이 없음. name에 넣어주는 것이니까
	}
	public PayType getPayType() {
		return payType;
	}
	public void setPayType(PayType payType) {
		this.payType=payType;
	}
}


#6
public abstract class Product { //상품에 대한 정보로 이름과 가격 넣어줌
	String pname;
	int price;
	
	public abstract void printExtra(); //상품에 대한 추가정보가 있으면 넣으려고 만들어 놓음
	
	
	public void printDetail() {
		System.out.printf("상품명 : %s, 가격 : %d, ", pname,price);
		printExtra();
	}
}


#7
public class SmartTV extends Product{
	String maker;
	
	public SmartTV(String pname, int price, String maker) {
		this.pname=pname;
		this.price=price;
		this.maker=maker;
	}
	
	@Override
	public void printExtra() {
		System.out.print("제조사 : "+maker);
	}
}
